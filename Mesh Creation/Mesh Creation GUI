import tkinter as tk
import subprocess
from tkinter import filedialog, messagebox
from PIL import Image, ImageTk
import os
import time

def browse_directory():
    directory = filedialog.askdirectory()
    directory_label.config(text=directory)

def run_script(script_name):
    directory = directory_label.cget("text")
    load_value = load_entry.get()  # Get the load value from the entry box
    if directory and load_value:
        script_path = f'{script_name}'  # No .py extension needed
        print(f"\nLooking for script at: {script_path}\n")  # Debugging line
        if os.path.isfile(script_path):
            start_time = time.time()  # Start timing
            try:
                subprocess.run(['python', script_path, directory, load_value], check=True)
                runtime = time.time() - start_time  # Calculate runtime
                messagebox.showinfo("Runtime", f"Script executed successfully.\nTotal runtime: {runtime:.2f} seconds")
            except subprocess.CalledProcessError as e:
                print(f"Error running script: {e}")
                runtime = time.time() - start_time  # Calculate runtime even on error
                messagebox.showerror("Error", f"Script failed with error: {e}\nTotal runtime: {runtime:.2f} seconds")
        else:
            print(f"Script not found: {script_path}")
            messagebox.showwarning("Warning", f"Script not found: {script_path}")
    else:
        messagebox.showwarning("Warning", "Please select a directory and provide a load value.")

def open_gui(script_name):
    script_path = f'{script_name}.py'
    if os.path.isfile(script_path):
        subprocess.Popen(['python', script_path])
    else:
        print(f"Script not found: {script_path}")
        messagebox.showwarning("Warning", f"Script not found: {script_path}")

def create_image_button(root, image_path, text, command, row, col):
    try:
        image = Image.open(image_path)
        image = image.resize((100, 100), Image.Resampling.LANCZOS)
        photo = ImageTk.PhotoImage(image)
        
        button = tk.Button(root, image=photo, command=command)
        button.image = photo
        
        label = tk.Label(root, text=text)
        
        button.grid(row=row, column=col, padx=10, pady=(10, 0))
        label.grid(row=row+1, column=col, padx=10, pady=(0, 10))
        
        return button
    except Exception as e:
        print(f"Error loading image {image_path}: {e}")

if not os.getenv('CI'):
    root = tk.Tk()
    root.title("Dashboard")

    # Directory selection
    directory_button = tk.Button(root, text="Select Directory", command=browse_directory)
    directory_button.grid(row=0, column=0, columnspan=4, padx=10, pady=10)

    directory_label = tk.Label(root, text="", wraplength=400)
    directory_label.grid(row=1, column=0, columnspan=4, padx=10, pady=10)

    # Load value input
    tk.Label(root, text="Enter Load Value:").grid(row=2, column=0, padx=10, pady=10)
    load_entry = tk.Entry(root)
    load_entry.grid(row=2, column=1, padx=10, pady=10, columnspan=3)

    # Buttons for different scripts
    buttons = [
        ("Mesh Creation\istockphoto-478463538-612x612.jpg", "Interpolation", lambda: open_gui('Logarithmic_interpolation'))
    ]

    row = 3
    col = 0

    for image_path, text, command in buttons:
        create_image_button(root, image_path, text, command, row, col)
        col += 1
        if col > 3:
            col = 0
            row += 2

    # Footer
    footer_frame = tk.Frame(root, bg="lightgrey", padx=10, pady=1)
    footer_frame.grid(row=row + 2, column=0, columnspan=4, sticky="ew")

    footer_label = tk.Label(footer_frame, text="Developed by M&M Â© All rights reserved", bg="lightgrey", font=("Arial", 7))
    footer_label.pack(side=tk.LEFT)

    root.mainloop()
else:
    print("Running in CI environment - GUI is not executed.")
